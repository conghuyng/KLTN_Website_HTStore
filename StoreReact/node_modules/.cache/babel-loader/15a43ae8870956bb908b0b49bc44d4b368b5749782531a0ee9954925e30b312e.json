{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Attachments\\\\Desktop\\\\KLTN_Website_HTStore\\\\StoreReact\\\\src\\\\container\\\\Message\\\\MessagePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChatWindow from \"./ChatWindow\";\nimport MessageDisscution from \"./MessageDisscution\";\nimport \"./MessagePage.scss\";\nimport { createNewRoom, listRoomOfUser } from \"../../services/userService\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessagePage(props) {\n  _s();\n  const [dataRoom, setdataRoom] = useState([]);\n  const [selectedRoom, setselectedRoom] = useState(\"\");\n  const [dataUser, setdataUser] = useState({});\n  const host = process.env.REACT_APP_BACKEND_URL;\n  const socketRef = useRef();\n  const [id, setId] = useState();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    setdataUser(userData);\n    let createRoom = async () => {\n      let res = await createNewRoom({\n        userId1: userData.id\n      });\n      if (res && res.errCode) {\n        fetchListRoom(userData.id);\n      }\n    };\n    if (userData) {\n      socketRef.current.on(\"getId\", data => {\n        setId(data);\n      }); // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\n      createRoom();\n      fetchListRoom(userData.id);\n      socketRef.current.on(\"sendDataServer\", dataGot => {\n        fetchListRoom(userData.id);\n      });\n      socketRef.current.on(\"loadRoomServer\", dataGot => {\n        fetchListRoom(userData.id);\n      });\n      return () => {\n        socketRef.current.disconnect();\n      };\n    }\n  }, []);\n  let handleClickRoom = roomId => {\n    socketRef.current.emit(\"loadRoomClient\");\n    setselectedRoom(roomId);\n  };\n  let fetchListRoom = async userId => {\n    let res = await listRoomOfUser(userId);\n    if (res && res.errCode == 0) {\n      setdataRoom(res.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ks-page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ks-page-content-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ks-messenger\",\n          children: [/*#__PURE__*/_jsxDEV(MessageDisscution, {\n            userId: dataUser.id,\n            isAdmin: false,\n            handleClickRoom: handleClickRoom,\n            data: dataRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), selectedRoom ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n            userId: dataUser.id,\n            roomId: selectedRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Ch\\u01B0a ch\\u1ECDn ph\\xF2ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(MessagePage, \"DHrr1eKJplclGpai7VqnwTNOliU=\");\n_c = MessagePage;\nexport default MessagePage;\nvar _c;\n$RefreshReg$(_c, \"MessagePage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","ChatWindow","MessageDisscution","createNewRoom","listRoomOfUser","socketIOClient","jsxDEV","_jsxDEV","MessagePage","props","_s","dataRoom","setdataRoom","selectedRoom","setselectedRoom","dataUser","setdataUser","host","process","env","REACT_APP_BACKEND_URL","socketRef","id","setId","current","connect","userData","JSON","parse","localStorage","getItem","createRoom","res","userId1","errCode","fetchListRoom","on","data","dataGot","disconnect","handleClickRoom","roomId","emit","userId","className","children","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Attachments/Desktop/KLTN_Website_HTStore/StoreReact/src/container/Message/MessagePage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ChatWindow from \"./ChatWindow\";\r\nimport MessageDisscution from \"./MessageDisscution\";\r\nimport \"./MessagePage.scss\";\r\nimport { createNewRoom, listRoomOfUser } from \"../../services/userService\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nfunction MessagePage(props) {\r\n    const [dataRoom, setdataRoom] = useState([]);\r\n    const [selectedRoom, setselectedRoom] = useState(\"\");\r\n    const [dataUser, setdataUser] = useState({});\r\n    const host = process.env.REACT_APP_BACKEND_URL;\r\n    const socketRef = useRef();\r\n    const [id, setId] = useState();\r\n    useEffect(() => {\r\n        socketRef.current = socketIOClient.connect(host);\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        setdataUser(userData);\r\n        let createRoom = async () => {\r\n            let res = await createNewRoom({\r\n                userId1: userData.id,\r\n            });\r\n            if (res && res.errCode) {\r\n                fetchListRoom(userData.id);\r\n            }\r\n        };\r\n        if (userData) {\r\n            socketRef.current.on(\"getId\", (data) => {\r\n                setId(data);\r\n            }); // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n            createRoom();\r\n\r\n            fetchListRoom(userData.id);\r\n\r\n            socketRef.current.on(\"sendDataServer\", (dataGot) => {\r\n                fetchListRoom(userData.id);\r\n            });\r\n            socketRef.current.on(\"loadRoomServer\", (dataGot) => {\r\n                fetchListRoom(userData.id);\r\n            });\r\n            return () => {\r\n                socketRef.current.disconnect();\r\n            };\r\n        }\r\n    }, []);\r\n    let handleClickRoom = (roomId) => {\r\n        socketRef.current.emit(\"loadRoomClient\");\r\n        setselectedRoom(roomId);\r\n    };\r\n    let fetchListRoom = async (userId) => {\r\n        let res = await listRoomOfUser(userId);\r\n        if (res && res.errCode == 0) {\r\n            setdataRoom(res.data);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"ks-page-content\">\r\n                <div className=\"ks-page-content-body\">\r\n                    <div className=\"ks-messenger\">\r\n                        <MessageDisscution\r\n                            userId={dataUser.id}\r\n                            isAdmin={false}\r\n                            handleClickRoom={handleClickRoom}\r\n                            data={dataRoom}\r\n                        />\r\n                        {selectedRoom ? (\r\n                            <ChatWindow\r\n                                userId={dataUser.id}\r\n                                roomId={selectedRoom}\r\n                            />\r\n                        ) : (\r\n                            <div>\r\n                                <span className=\"title\">Chưa chọn phòng</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}