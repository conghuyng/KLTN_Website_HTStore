{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Attachments\\\\Desktop\\\\KLTN_Website_HTStore\\\\StoreReact\\\\src\\\\container\\\\System\\\\Message\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useFetchAllcode } from \"../../customize/fetch\";\nimport { listRoomOfAdmin } from \"../../../services/userService\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport MessageDisscution from \"../../Message/MessageDisscution\";\nimport ChatWindow from \"../../Message/ChatWindow\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  const [dataUser, setdataUser] = useState({});\n  const [dataRoom, setdataRoom] = useState([]);\n  const [selectedRoom, setselectedRoom] = useState(\"\");\n  const host = process.env.REACT_APP_BACKEND_URL;\n  const socketRef = useRef();\n  const [id, setId] = useState();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\n    setdataUser(userData);\n    socketRef.current.on(\"getId\", data => {\n      setId(data);\n    }); // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\n    fetchListRoom();\n    socketRef.current.on(\"sendDataServer\", dataGot => {\n      fetchListRoom();\n    });\n    socketRef.current.on(\"loadRoomServer\", dataGot => {\n      fetchListRoom(userData.id);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n  let handleClickRoom = roomId => {\n    socketRef.current.emit(\"loadRoomClient\");\n    setselectedRoom(roomId);\n  };\n  let fetchListRoom = async () => {\n    let res = await listRoomOfAdmin();\n    if (res && res.errCode == 0) {\n      setdataRoom(res.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ks-page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ks-page-content-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ks-messenger\",\n          children: [/*#__PURE__*/_jsxDEV(MessageDisscution, {\n            userId: dataUser.id,\n            isAdmin: true,\n            handleClickRoom: handleClickRoom,\n            data: dataRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), selectedRoom ? /*#__PURE__*/_jsxDEV(ChatWindow, {\n            userId: dataUser.id,\n            roomId: selectedRoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Ch\\u01B0a ch\\u1ECDn ph\\xF2ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Message, \"P2OlG+DdI580ELh34Z7VhcHk6tQ=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useFetchAllcode","listRoomOfAdmin","moment","toast","BrowserRouter","Router","Switch","Route","Link","Redirect","MessageDisscution","ChatWindow","socketIOClient","jsxDEV","_jsxDEV","Message","_s","dataUser","setdataUser","dataRoom","setdataRoom","selectedRoom","setselectedRoom","host","process","env","REACT_APP_BACKEND_URL","socketRef","id","setId","current","connect","userData","JSON","parse","localStorage","getItem","on","data","fetchListRoom","dataGot","disconnect","handleClickRoom","roomId","emit","res","errCode","className","children","userId","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Attachments/Desktop/KLTN_Website_HTStore/StoreReact/src/container/System/Message/Message.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useFetchAllcode } from \"../../customize/fetch\";\r\nimport { listRoomOfAdmin } from \"../../../services/userService\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport MessageDisscution from \"../../Message/MessageDisscution\";\r\nimport ChatWindow from \"../../Message/ChatWindow\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst Message = () => {\r\n    const [dataUser, setdataUser] = useState({});\r\n    const [dataRoom, setdataRoom] = useState([]);\r\n    const [selectedRoom, setselectedRoom] = useState(\"\");\r\n    const host = process.env.REACT_APP_BACKEND_URL;\r\n    const socketRef = useRef();\r\n    const [id, setId] = useState();\r\n    useEffect(() => {\r\n        socketRef.current = socketIOClient.connect(host);\r\n        const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        setdataUser(userData);\r\n        socketRef.current.on(\"getId\", (data) => {\r\n            setId(data);\r\n        }); // phần này đơn giản để gán id cho mỗi phiên kết nối vào page. Mục đích chính là để phân biệt đoạn nào là của mình đang chat.\r\n        fetchListRoom();\r\n        socketRef.current.on(\"sendDataServer\", (dataGot) => {\r\n            fetchListRoom();\r\n        });\r\n        socketRef.current.on(\"loadRoomServer\", (dataGot) => {\r\n            fetchListRoom(userData.id);\r\n        });\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n        };\r\n    }, []);\r\n    let handleClickRoom = (roomId) => {\r\n        socketRef.current.emit(\"loadRoomClient\");\r\n        setselectedRoom(roomId);\r\n    };\r\n    let fetchListRoom = async () => {\r\n        let res = await listRoomOfAdmin();\r\n        if (res && res.errCode == 0) {\r\n            setdataRoom(res.data);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"ks-page-content\">\r\n                <div className=\"ks-page-content-body\">\r\n                    <div className=\"ks-messenger\">\r\n                        <MessageDisscution\r\n                            userId={dataUser.id}\r\n                            isAdmin={true}\r\n                            handleClickRoom={handleClickRoom}\r\n                            data={dataRoom}\r\n                        />\r\n                        {selectedRoom ? (\r\n                            <ChatWindow\r\n                                userId={dataUser.id}\r\n                                roomId={selectedRoom}\r\n                            />\r\n                        ) : (\r\n                            <div>\r\n                                <span className=\"title\">Chưa chọn phòng</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Message;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}